/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package scene;

import java.io.FileWriter;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Bill;
import model.Product;
import repository.BillRepositoryImpl;
import repository.ProductRepositoryImpl;

/**
 *
 * @author HP
 */

public class OrderScene extends javax.swing.JFrame {
    private ProductRepositoryImpl productRepositoryImpl;
    private BillRepositoryImpl billRepositoryImpl;
    private List<Product> listProduct = new ArrayList<Product>();
    private Map<Product, Integer> productQuantityMap = new HashMap<>();
    
    /**
     * Creates new form OrderScene
     */
    public OrderScene() {
        initComponents();
        initSetUp();
    }
    
    public void initSetUp() {
        productRepositoryImpl = new ProductRepositoryImpl();
        billRepositoryImpl = new BillRepositoryImpl();
        this.setLocationRelativeTo(null);
        
        listProduct = productRepositoryImpl.findAll();
        for (Product product : listProduct) {
            menuComboBox.addItem(product.getTenSP());
	}
    }
    
    public void clearDetail() {
        nameClientField.setText("");
        phoneField.setText("");
        emailClientField.setText("");
        DefaultTableModel model = (DefaultTableModel) productChosenTable.getModel();
        model.setRowCount(0);
        sumOfProductField.setText("");
        totalField.setText("");
    }
    
    private void decreaseStock(){
        DefaultTableModel model = (DefaultTableModel) productChosenTable.getModel();
        for(int i = 0; i < model.getRowCount(); i++){
            String name = model.getValueAt(i, 0).toString();
            int num = Integer.parseInt(model.getValueAt(i, 1).toString());
            Product findProduct = productRepositoryImpl.findByName(name);
                  
            if(findProduct != null){
                int formerNum = findProduct.getSoLuong();
                int latterNum = formerNum - num;
                findProduct.setSoLuong(latterNum);
                productRepositoryImpl.update(findProduct);
            }
        }        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        logoutBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nameClientField = new javax.swing.JTextField();
        emailClientField = new javax.swing.JTextField();
        phoneField = new javax.swing.JTextField();
        generateBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        numberSpinner = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        sumOfProductField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        totalField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        productScrollPane = new javax.swing.JScrollPane();
        productChosenTable = new javax.swing.JTable();
        menuComboBox = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        chooseProductBtn = new javax.swing.JButton();
        deleteProductBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Order Scene");

        logoutBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        logoutBtn.setText("Đăng xuất");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Tên khách hàng:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Email:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Số điện thoại:");

        generateBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        generateBtn.setText("Xuất hóa đơn");
        generateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateBtnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Chọn món:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Số lượng:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Tổng số lượng:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Tổng tiền:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Danh sách món đã chọn:");

        productChosenTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Tên món", "Số lượng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productScrollPane.setViewportView(productChosenTable);
        if (productChosenTable.getColumnModel().getColumnCount() > 0) {
            productChosenTable.getColumnModel().getColumn(0).setResizable(false);
            productChosenTable.getColumnModel().getColumn(0).setPreferredWidth(250);
            productChosenTable.getColumnModel().getColumn(1).setResizable(false);
            productChosenTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        menuComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuComboBoxActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("VNĐ");

        chooseProductBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        chooseProductBtn.setText("Chọn");
        chooseProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseProductBtnActionPerformed(evt);
            }
        });

        deleteProductBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteProductBtn.setText("Xóa");
        deleteProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProductBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(221, 221, 221)
                .addComponent(logoutBtn)
                .addGap(39, 39, 39))
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3))
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(menuComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(numberSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(nameClientField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(emailClientField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(phoneField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(93, 93, 93)
                        .addComponent(sumOfProductField, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(172, 172, 172)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totalField, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(651, 651, 651)
                        .addComponent(chooseProductBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(productScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(deleteProductBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(generateBtn)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(logoutBtn)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nameClientField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(emailClientField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(numberSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(chooseProductBtn))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(menuComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(productScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteProductBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sumOfProductField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addComponent(jLabel8)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(totalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(generateBtn)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void chooseProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseProductBtnActionPerformed
        Object value = numberSpinner.getValue();
        int newQuantity = 0;

        if (value instanceof Integer) {
            newQuantity = (Integer) value;
        } else if (value instanceof Double) {
            newQuantity = ((Double) value).intValue();
        } else {
            JOptionPane.showMessageDialog(null, "Số lượng không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (newQuantity < 0) {
            JOptionPane.showMessageDialog(null, "Số lượng không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String productName = (String) menuComboBox.getSelectedItem();
        Product selectedProduct = null;

        for (Product product : listProduct) {
            if (product.getTenSP().equals(productName)) {
                selectedProduct = product;
                break;
            }
        }
        
        if(selectedProduct.getSoLuong() < newQuantity)
        {
            JOptionPane.showMessageDialog(this, "Món này đã hết, vui lòng chọn món khác");
            return;
        }

        if (selectedProduct == null) {
            JOptionPane.showMessageDialog(null, "Không tìm thấy món này.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (newQuantity == 0) {
            productQuantityMap.remove(selectedProduct);
        } else {
            productQuantityMap.put(selectedProduct, newQuantity);
        }

        updateProductChosenTable();
        updateTotal();
    }



    private void updateProductChosenTable() {
        DefaultTableModel model = (DefaultTableModel) productChosenTable.getModel();
        model.setRowCount(0);

        for (Map.Entry<Product, Integer> entry : productQuantityMap.entrySet()) {
            Product product = entry.getKey();
            int quantity = entry.getValue();
            double totalPrice = product.getGia() * quantity;
            model.addRow(new Object[]{product.getTenSP(), quantity, totalPrice});
        }
    }

    private void updateTotal() {
        int totalQuantity = 0;
        double totalMoney = 0;

        for (Map.Entry<Product, Integer> entry : productQuantityMap.entrySet()) {
            totalQuantity += entry.getValue();
            totalMoney += entry.getKey().getGia() * entry.getValue();
        }

        sumOfProductField.setText(String.valueOf(totalQuantity));
        totalField.setText(String.valueOf(totalMoney));
    }//GEN-LAST:event_chooseProductBtnActionPerformed

    private void generateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateBtnActionPerformed
        String name = nameClientField.getText().trim();
        String email = emailClientField.getText().trim();
        String phone = phoneField.getText().trim();
        
        if (name.isEmpty() || email.isEmpty() || phone.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng điền đầy đủ thông tin khách hàng.", "Thiếu thông tin", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (productQuantityMap.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn ít nhất 1 món");
            return;
        }

        double tongTien = 0.0;

        for (Map.Entry<Product, Integer> entry : productQuantityMap.entrySet()) {
            Product product = entry.getKey();
            int quantity = entry.getValue();
            tongTien += product.getGia() * quantity;  
        }
        
        Bill bill = new Bill();
        LocalDate ngayDat = LocalDate.now();
        String ngayDatStr = ngayDat.toString();
        
        bill.setTen(name);
        bill.setEmail(email);
        bill.setSdt(phone);
        bill.setNgayDat(ngayDatStr);
        bill.setTongTien(tongTien);
        
        billRepositoryImpl.save(bill);
        
        JOptionPane.showMessageDialog(this, "Thông tin hóa đơn: \n" + bill.toString(), "Hiện hóa đơn", JOptionPane.INFORMATION_MESSAGE);
        decreaseStock();
        clearDetail();
    }//GEN-LAST:event_generateBtnActionPerformed

    private void deleteProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProductBtnActionPerformed
        int selectRow = productChosenTable.getSelectedRow();
        if (selectRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm để xóa");
            return;
        }
        
        int option = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa đơn hàng này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (option != JOptionPane.YES_OPTION) {
            return;
        }
        
        String tenSP = productChosenTable.getValueAt(selectRow, 0).toString();
        Product productToDelete = null;
        for (Product p : productRepositoryImpl.findAll()) {
            if (p.getTenSP().equals(tenSP)) {
                productToDelete = p;
                break;
            }
        }
        if (productToDelete != null) {
            productRepositoryImpl.delete(productToDelete);
            ((DefaultTableModel) productChosenTable.getModel()).removeRow(selectRow);
            JOptionPane.showMessageDialog(this, "Đã xóa sản phẩm thành công");
        } else {
            JOptionPane.showMessageDialog(this, "Không tìm thấy sản phẩm để xóa");
        }
    }//GEN-LAST:event_deleteProductBtnActionPerformed

    private void menuComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderScene.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderScene.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderScene.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderScene.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderScene().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseProductBtn;
    private javax.swing.JButton deleteProductBtn;
    private javax.swing.JTextField emailClientField;
    private javax.swing.JButton generateBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JComboBox<String> menuComboBox;
    private javax.swing.JTextField nameClientField;
    private javax.swing.JSpinner numberSpinner;
    private javax.swing.JTextField phoneField;
    private javax.swing.JTable productChosenTable;
    private javax.swing.JScrollPane productScrollPane;
    private javax.swing.JTextField sumOfProductField;
    private javax.swing.JTextField totalField;
    // End of variables declaration//GEN-END:variables
}
